{"version":3,"sources":["components/signup.js","components/auth.js","components/login.js","components/landingpage.js","components/add-todo.js","components/todo-ui.js","components/completed-todos.js","components/mytodos.js","components/errorpage.js","components/protectedroute.js","App.js","components/navbar.js","serviceWorker.js","index.js"],"names":["Signup","props","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","state","task","time","addTodo","date","className","Container","Row","Col","xs","md","size","offset","Form","onSubmit","history","push","FormGroup","row","Input","onChange","this","type","placeholder","firstname","lastname","email","password","Button","color","to","Component","authenticated","callback","Login","data","axios","post","then","res","console","log","catch","err","LandingPage","onClick","AddTask","auth","logout","name","TodoUI","todos","toggleCheckbox","deleteTask","taskList","allCheckedUnchecked","checkUncheckAll","checked","handleCheckUncheck","length","map","todo","event","newTodoDate","Date","toDateString","ListGroupItem","key","ListGroupItemHeading","check","ListGroup","completedTodoUI","completedTodos","completedToggleCheckbox","taskCompleted","MyTodos","newTask","Math","floor","random","isChecked","newTodos","taskLeft","filter","delTask","newCompletedTodos","completedTaskLeft","todoLeft","todoChecks","itemChecks","allUncheckedUnchecked","ErrorPage","ProtectedRoute","component","isAuthenticated","pathname","React","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c07e06da.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Row, Col, Button, Form, FormGroup, Input } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        task: \"\",\n        date: \"\",\n        time: \"\",\n        // isChecked: false\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      //set id for input field to be same as state properties above\n      // grab the id of the target element and\n      // update the state properties\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    if (this.state.task === \"\" && this.state.time === \"\")\n    {\n      return null;\n    }\n    else\n    {\n\n      this.props.addTodo(this.state);\n      this.setState({\n        task: \"\",\n        date: \"\",\n        time: \"\",\n      });\n    }\n  };\n\n  render() {\n    // const { handleChange, handleSubmit, deleteTask } = this.props;\n    // const deleteTodo = todos.map((todo) => {\n    //   let todoDate = new Date(todo.date);\n    //   todoDate = todoDate.getDate();\n    //   return todoDate === curr_date ? \"Today\" : \"Upcoming\";\n    // });\n\n    return (\n      <div className=\"input-fields\">\n        <Container>\n        <h2 className='text-center'>Signup</h2>\n          <Row>\n            <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\n            <Form onSubmit={() => {\n                    this.props.history.push('/login');\n              }}>\n                <FormGroup row>\n                  <Col xs=\"12\" className=\"form-columns\">\n                    <Input\n                      onChange={this.handleChange}\n                      type=\"text\"\n                      id=\"firstname\"\n                      placeholder=\"Firstname\"\n                      value={this.state.firstname}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Col xs=\"12\" className=\"form-columns\">\n                    <Input\n                      onChange={this.handleChange}\n                      type=\"text\"\n                      id=\"lastname\"\n                      placeholder=\"Lastname\"\n                      value={this.state.lastname}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Col xs=\"12\" className=\"form-columns\">\n                    <Input\n                      onChange={this.handleChange}\n                      type=\"email\"\n                      id=\"email\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Col xs=\"12\" className=\"form-columns\">\n                    <Input\n                      onChange={this.handleChange}\n                      type=\"password\"\n                      id=\"password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Col xs=\"4\" md=\"2\" className=\"form-columns\">\n                    <Button id=\"add-todo\" color=\"success\">\n                      Signup\n                    </Button>\n                  </Col>\n                  <Col xs=\"8\" md=\"10\" className=\"form-columns\">\n                    <span>Already have an account? <Link to='/login'> Login</Link></span>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Signup;","\nclass Auth {\n    constructor() {\n        this.authenticated = false;\n    }\n\n    login(callback) {\n        this.authenticated = true;\n        callback();\n    }\n\n    logout(callback) {\n        this.authenticated = false;\n        callback();\n    }\n\n    isAuthenticated() {\n        return this.authenticated;\n    }\n}\n\nexport default new Auth();","import React, { Component } from 'react'\nimport { Container, Row, Col, Button, Form, FormGroup, Input } from \"reactstrap\";\nimport auth from './auth';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        email: \"\",\n        password: \"\"\n        // time: \"\",\n        // isChecked: false\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      //set id for input field to be same as state properties above\n      // grab the id of the target element and\n      // update the state properties\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    const data = {\n        [e.target.id]: e.target.value\n    }\n    axios.post('https://still-waters-85911.herokuapp.com/api/login', data)\n        .then((res) => {\n            console.log(res);\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n\n    // if (this.state.task === \"\" && this.state.time === \"\")\n    // {\n    //   return null;\n    // }\n    // else\n    // {\n\n    //   this.props.addTodo(this.state);\n    //   this.setState({\n    //     task: \"\",\n    //     date: \"\",\n    //     time: \"\",\n    //   });\n    // }\n  };\n\n  render() {\n    // const { handleChange, handleSubmit, deleteTask } = this.props;\n    // const deleteTodo = todos.map((todo) => {\n    //   let todoDate = new Date(todo.date);\n    //   todoDate = todoDate.getDate();\n    //   return todoDate === curr_date ? \"Today\" : \"Upcoming\";\n    // });\n\n    return (\n      <div className=\"input-fields\">\n        <Container>\n        <h2 className='text-center'>Login</h2>\n          <Row>\n            <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\n              <Form onSubmit={this.handleSubmit}>\n                <FormGroup row>\n                  <Col xs=\"12\" className=\"form-columns\">\n                    <Input\n                      onChange={this.handleChange}\n                      type=\"text\"\n                      id=\"email\"\n                      placeholder=\"Email address\"\n                      value={this.state.email}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Col xs=\"12\" className=\"form-columns\">\n                    <Input\n                      onChange={this.handleChange}\n                      type=\"password\"\n                      id=\"password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Col xs=\"4\" md='3' className=\"form-columns\">\n                    <Button id=\"add-todo\" color=\"success\">\n                      Login\n                    </Button>\n                  </Col>\n                  <Col xs=\"8\" md='9' className=\"form-columns\">\n                    <span>Don't have an account? <Link to='/signup'> Signup</Link></span>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Login;","  import React, { Component } from 'react'\n  import { Container, Row, Col, Button, Form, FormGroup, Input } from \"reactstrap\";\n\n  class LandingPage extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          task: \"\",\n          date: \"\",\n          time: \"\",\n          // isChecked: false\n      };\n    }\n\n    handleChange = (e) => {\n      this.setState({\n        //set id for input field to be same as state properties above\n        // grab the id of the target element and\n        // update the state properties\n        [e.target.id]: e.target.value,\n      });\n    };\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      // console.log(this.state);\n      if (this.state.task === \"\" && this.state.time === \"\")\n      {\n        return null;\n      }\n      else\n      {\n\n        this.props.addTodo(this.state);\n        this.setState({\n          task: \"\",\n          date: \"\",\n          time: \"\",\n        });\n      }\n    };\n\n    render() {\n      // const { handleChange, handleSubmit, deleteTask } = this.props;\n      // const deleteTodo = todos.map((todo) => {\n      //   let todoDate = new Date(todo.date);\n      //   todoDate = todoDate.getDate();\n      //   return todoDate === curr_date ? \"Today\" : \"Upcoming\";\n      // });\n\n      return (\n        <div className=\"input-fields\">\n          <Container>\n          <h1 className='text-center'>Todo App</h1>\n          <h3 className='text-center m-4'>Hi there! Please choose an option below</h3>\n            <Row>\n              <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\n                <Form \n                // onSubmit={this.handleSubmit}\n                >\n                  <FormGroup row>\n                      <Col xs=\"4\" className=\"form-columns text-right\">\n                      <Button id=\"add-todo\" color=\"success\" onClick={() => {\n                        this.props.history.push('/login');\n                      }}>\n                          Login\n                      </Button>\n                      </Col>\n                      <Col xs=\"4\" className=\"form-columns\">\n                      <Button id=\"add-todo\" color=\"success\" onClick={() => {\n                        this.props.history.push('/signup');\n                      }}>\n                        Signup\n                      </Button>\n                      </Col>\n                      <Col xs=\"4\" className=\"form-columns\">\n                      <Button id=\"add-todo\" color=\"danger\" onClick={() => {\n                        this.props.history.push('/mytodos');\n                      }}>\n                       MyTodos\n                      </Button>\n                      </Col>\n                  </FormGroup>\n                  {/* <FormGroup row>\n                    <Col xs=\"5\" className=\"form-columns\">\n                      <Button id=\"add-todo\" color=\"success\">\n                        Add Task\n                      </Button>\n                    </Col>\n                  </FormGroup> */}\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n    }\n  }\n\n  export default LandingPage;","import React, { Component } from 'react'\nimport { Container, Row, Col, Button, Form, FormGroup, Input } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport auth from './auth';\nclass AddTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        task: \"\",\n        date: \"\",\n        time: \"\",\n        // isChecked: false\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      //set id for input field to be same as state properties above\n      // grab the id of the target element and\n      // update the state properties\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    if (this.state.task === \"\" && this.state.time === \"\")\n    {\n      return null;\n    }\n    else\n    {\n\n      this.props.addTodo(this.state);\n      this.setState({\n        task: \"\",\n        date: \"\",\n        time: \"\",\n      });\n    }\n  };\n\n  render() {\n    // const { handleChange, handleSubmit, deleteTask } = this.props;\n    // const deleteTodo = todos.map((todo) => {\n    //   let todoDate = new Date(todo.date);\n    //   todoDate = todoDate.getDate();\n    //   return todoDate === curr_date ? \"Today\" : \"Upcoming\";\n    // });\n\n    return (\n      <div className=\"input-fields\">\n        <Container>\n        <Row>\n          <Col xs='6'>\n            <Link to='/' className='text-white'>Back to Landingpage</Link>\n          </Col>\n          <Col xs='6' className='text-right'>\n\n            <Form onSubmit={() => {\n                    auth.logout(() => {\n                        this.props.history.push('/login');\n                    })\n                }}>\n\n                <button className='btn btn-success'>Logout</button>\n\n            </Form>\n          </Col>\n        </Row>    \n        <h2 className='text-center'>Add todo</h2>\n          <Row>\n            <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\n              <Form onSubmit={this.handleSubmit}>\n                <FormGroup row>\n                  <Col xs=\"12\" className=\"form-columns\">\n                    <Input\n                      onChange={this.handleChange}\n                      type=\"text\"\n                      id=\"task\"\n                      placeholder=\"Enter Your Task\"\n                      value={this.state.task}\n                    />\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Col xs=\"7\" className=\"form-columns\">\n                        <Input \n                            onChange={this.handleChange} \n                            type=\"date\" \n                            id=\"date\" \n                            value={this.state.date} \n                        />\n                    </Col>\n                    <Col xs=\"5\" className=\"form-columns\">\n                        <Input\n                            onChange={this.handleChange}\n                            type=\"select\"\n                            name=\"select\"\n                            id=\"time\"\n                            value={this.state.time}\n                        >\n                        <option>Select Time</option>\n                        <option>5:00am</option>\n                        <option>9:00am</option>\n                        <option>4:00pm</option>\n                        {/* <option>5</option> */}\n                        </Input>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Col xs=\"5\" className=\"form-columns\">\n                    <Button id=\"add-todo\" color=\"success\">\n                      Add Task\n                    </Button>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default AddTask;","import React from 'react'\nimport {\n            Container, Row, Col, Button, Form, FormGroup, Input, Label,\n            ListGroup, ListGroupItem,ListGroupItemHeading\n        } from \"reactstrap\";\n\nconst TodoUI = ({\n  todos,\n  deleteTask,\n  toggleCheckbox,\n  allCheckedUnchecked,\n  checkUncheckAll,\n  checked,\n  handleCheckUncheck,\n}) => {\n  const taskList = todos.length ? (\n    todos.map((todo,event) => {\n      let newTodoDate = new Date(todo.date);\n      newTodoDate = newTodoDate.toDateString();\n      // if (newTodoDate === curr_date) {\n      return (\n        // <div className=\"list-groups\">\n        <ListGroupItem className=\"my-tasks\" key={todo.id}>\n          <ListGroupItemHeading>{newTodoDate}</ListGroupItemHeading>\n          <div>\n            <Form className=\"todo-item\">\n              <FormGroup check>\n                <Input\n                  type=\"checkbox\"\n                  id={todo.id}\n                  onChange={() => toggleCheckbox(todo,event)}\n                  // checked={todo.isChecked}\n                />{\" \"}\n              </FormGroup>\n              <p>{todo.task}</p>\n              <p>{todo.time}</p>\n            </Form>\n            {/* <p>{todo.date}</p> */}\n          </div>\n        </ListGroupItem>\n        // </div>\n      );\n      // }\n    })\n  ) : (\n    <p id=\"addTask\">You have not added any task yet</p>\n  );\n\n  return (\n    <div className=\"task-list\">\n      <Container>\n        <Row>\n          <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\n            <div>\n              <h3 id=\"schedule\">{todos.length ? \"My Todos\" : null}</h3>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\n            <ListGroup>{taskList}</ListGroup>\n          </Col>\n        </Row>\n        {/* <Row>\n          <Col xs=\"12\" md={{ size: 6, offset: 3 }} className=\"select-all\">\n            {todos.length ? (\n              <Form>\n                <FormGroup row>\n                  <Col xs={8}>\n                    <FormGroup check>\n                      <Label check>\n                        <Input\n                          type=\"checkbox\"\n                          id=\"check-uncheck-all\"\n                          checked={allCheckedUnchecked}\n                          onChange={checkUncheckAll}\n                        />\n                        <span value=\"selectUnselectAll\">\n                          Select/Unselect All\n                        </span>\n                      </Label>\n                    </FormGroup>\n                  </Col>\n                  <Col xs={2}>\n                    <Button color=\"danger\" onClick={deleteTask} id=\"delete\">\n                      Delete\n                    </Button>\n                  </Col>\n                </FormGroup>\n              </Form>\n            ) : null}\n          </Col>\n        </Row> */}\n      </Container>\n    </div>\n  );\n};\n\nexport default TodoUI;","import React from 'react'\nimport {\n            Container, Row, Col, Button, Form, FormGroup, Input, Label,\n            ListGroup, ListGroupItem,ListGroupItemHeading\n        } from \"reactstrap\";\n\nconst completedTodoUI = ({\n  completedTodos,\n  deleteTask,\n  completedToggleCheckbox,\n  allCheckedUnchecked,\n  checkUncheckAll,\n  checked,\n  handleCheckUncheck,\n}) => {\n    let completedArray = completedTodos.length;\n  const taskCompleted = completedTodos.length ? (\n    completedTodos.map((todo) => {\n      let newTodoDate = new Date(todo.date);\n      newTodoDate = newTodoDate.toDateString();\n      // if (newTodoDate === curr_date) {\n      return (\n        //   todo.isChecked ? (\n            <ListGroupItem className=\"my-tasks\" key={todo.id}>\n            <ListGroupItemHeading>{newTodoDate}</ListGroupItemHeading>\n            <div>\n              <Form className=\"todo-item\">\n                <FormGroup check>\n                  <Input\n                    type=\"checkbox\"\n                    id={todo.id}\n                    onChange={() => completedToggleCheckbox(todo)}\n                    // checked={todo.isChecked}\n                  />{\" \"}\n                </FormGroup>\n                <p>{todo.task}</p>\n                <p>{todo.time}</p>\n              </Form>\n              {/* <p>{todo.date}</p> */}\n            </div>\n          </ListGroupItem>\n        //   ) : (\n        //       \"No task completed\"\n        //   )\n        // <div className=\"list-groups\">\n        // </div>\n      );\n      // }\n    })\n  ) : (\n\"\"\n  );\n\n  return (\n    <div className=\"task-list\">\n<Container>\n  <Row>\n    <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\n      <div>\n        <h3 id=\"schedule\">{completedTodos.length ? \"Completed Todos\" : null}</h3>\n      </div>\n    </Col>\n  </Row>\n  <Row>\n    <Col xs=\"12\" md={{ size: 6, offset: 3 }}>\n      <ListGroup>{taskCompleted}</ListGroup>\n    </Col>\n  </Row>\n  {/* <Row>\n    <Col xs=\"12\" md={{ size: 6, offset: 3 }} className=\"select-all\">\n      {todos.length ? (\n        <Form>\n          <FormGroup row>\n            <Col xs={8}>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    id=\"check-uncheck-all\"\n                    checked={allCheckedUnchecked}\n                    onChange={checkUncheckAll}\n                  />\n                  <span value=\"selectUnselectAll\">\n                    Select/Unselect All\n                  </span>\n                </Label>\n              </FormGroup>\n            </Col>\n            <Col xs={2}>\n              <Button color=\"danger\" onClick={deleteTask} id=\"delete\">\n                Delete\n              </Button>\n            </Col>\n          </FormGroup>\n        </Form>\n      ) : null}\n    </Col>\n  </Row> */}\n</Container>\n</div>\n  );\n};\n\nexport default completedTodoUI;","import React, { Component } from 'react';\nimport AddTask from './add-todo';\nimport TodoUI from './todo-ui';\nimport CompletedTodoUI from './completed-todos';\nimport auth from './auth';\n\nclass MyTodos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      completedTodos: []\n      // checked: false,\n      // allUncheckedUnchecked: false\n    };\n  }\n\n  addTodo = (newTask) => {\n    newTask.id = Math.floor(Math.random() * 1000);\n    newTask.isChecked = false;\n    if (newTask.id !== this.state.todos.id) {\n      // console.log(newTask.id);\n      // const todos = this.state.todos.map(item => {\n\n      // })\n      // const check = this.state.checked;\n      let newTodos = [...this.state.todos, newTask];\n      this.setState({\n        // state.todos.isChecked = !state.todos.isChecked;\n        todos: newTodos \n      })\n      // console.log(newTodos);\n    }\n    \n    else {\n      return null;\n    }\n  };\n  \n\n  deleteTask = () => {\n    // console.log(id)\n    // const taskLeft = this.state.todos.filter((todo) => {\n    //   if (todo.isChecked === false) {\n    //     todo.isChecked = true\n    //   }\n    //   else {\n    //     todo.isChecked = false;\n    //   }\n    //   // todo.isChecked = this.handleCheckUncheck\n    //   return todo.isChecked !== true;\n    // });\n    // this.setState({\n    //   todos: taskLeft,\n    // });\n    // console.log(taskLeft);\n    const taskLeft = this.state.todos.filter(todo => {\n      return todo.isChecked !== true;\n    });\n    this.setState({\n      todos: taskLeft\n    })\n  };\n\n  toggleCheckbox = (delTask,event) => {\n    console.log(event);\n    if (delTask.isChecked === false) {\n      delTask.isChecked = true;\n      // this.state.todos.pop(delTask);\n      // this.state.completedTodos.push(delTask);\n      const taskLeft = this.state.todos.filter(todo => {\n        return todo.isChecked !== true;\n      });\n      this.setState({\n        todos: taskLeft\n      })\n\n      let newCompletedTodos = [...this.state.completedTodos, delTask];\n      this.setState({\n        // state.todos.isChecked = !state.todos.isChecked;\n        completedTodos: newCompletedTodos \n      })\n\n      // console.log(this.state.todos);\n      // console.log(this.state.completedTodos);\n\n    } else {\n      delTask.isChecked = false;\n\n      // const completedTaskLeft = this.state.completedTodos.filter(todo => {\n      //   return todo.isChecked === true;\n      // });\n      // this.setState({\n      //   completedTodos: completedTaskLeft\n      // })\n    }\n  };\n\n  completedToggleCheckbox = (delTask) => {\n    if (delTask.isChecked === true) {\n      delTask.isChecked = false;\n      // this.state.todos.pop(delTask);\n      // this.state.completedTodos.push(delTask);\n      // const taskLeft = this.state.todos.filter(todo => {\n      //   return todo.isChecked !== true;\n      // });\n      // this.setState({\n      //   todos: taskLeft\n      // })\n      const completedTaskLeft = this.state.completedTodos.filter(todo => {\n        return todo.isChecked === true;\n      });\n      this.setState({\n        completedTodos: completedTaskLeft\n      })\n\n      let todoLeft = [...this.state.todos, delTask];\n      this.setState({\n        // state.todos.isChecked = !state.todos.isChecked;\n        todos: todoLeft \n      })\n\n      // console.log(this.state.todos);\n      // console.log(this.state.completedTodos);\n\n    } else {\n      delTask.isChecked = true;\n      // let todoLeft = [...this.state.todos, delTask];\n      // this.setState({\n      //   // state.todos.isChecked = !state.todos.isChecked;\n      //   todos: todoLeft \n      // })\n\n      // const completedTaskLeft = this.state.completedTodos.filter(todo => {\n      //   return todo.isChecked === true;\n      // });\n      // this.setState({\n      //   completedTodos: completedTaskLeft\n      // })\n    }\n\n  }\n\n  handleCheckUncheck = (e, id) => {\n    \n    let itemId = e.target.id;\n    let checked = e.target.checked;\n    // this.setState((prevState) => {\n    //   let { todos, allUnchecked } = prevState;\n    //   if (itemId === \"check-uncheck-all\") {\n    //     allUnchecked = checked;\n    //     todos = todos.map((item) => ({ ...item, isChecked: checked }));\n    //     console.log(todos)\n    //   } else {\n    //     todos = todos.map((item) =>\n    //       item.id === itemId ? { ...item, isChecked: checked } : item\n    //     );\n    //     allUnchecked = todos.every((item) => item.isChecked);\n    //     console.log(todos);\n    //   }\n    //   return { todos, allUnchecked };\n    this.setState({ checked: !this.state.checked });\n    const todoChecks = this.state.todos.map((itemChecks) => {\n      // this.setState({ checked: !this.state.checked });\n      // if (itemChecks.id === id) {\n        return { ...itemChecks, isChecked: e.target.checked };  \n      // }\n      \n      // return itemChecks.isChecked = e.target.checked;\n    });\n    console.log(e.target.checked);\n    console.log(todoChecks)\n    \n  }\n\n  checkUncheckAll = (e) => {\n    // let checked = e.target.checked;\n    let checkboxName = e.target.name;\n    if (checkboxName === 'check-uncheck-all') {\n      // let todosChecked = this.state.todos.map(todo => {\n      //   return todo.isChecked = checked;\n      // })\n      this.setState({ allUncheckedUnchecked: !this.state.allUncheckedUnchecked});\n      // console.log(checked);\n    }\n \n      // this.setState({ allUncheckedUnchecked: !this.state.allUncheckedUnchecked });\n   \n    \n    // \n    // const checkUncheck = this.state.todos.map((todo) => {\n    //   if (todo.isChecked === false) {\n    //     return (todo.isChecked = true);\n    //   } else {\n    //     return (todo.isChecked = false);\n    //   }\n    // });\n    // this.setState({ todos: checkUncheck });\n  };\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <AddTask addTodo={this.addTodo} />\n        <TodoUI\n          todos={this.state.todos}\n          deleteTask={this.deleteTask}\n          toggleCheckbox={this.toggleCheckbox}\n          handleCheckUncheck={this.handleCheckUncheck}\n          checked={this.state.checked}\n          allUncheckedUnchecked={this.state.allUncheckedUnchecked}\n          checkUncheckAll={this.checkUncheckAll}\n        />\n        <CompletedTodoUI\n          completedTodos={this.state.completedTodos}\n          completedToggleCheckbox={this.completedToggleCheckbox}\n        />\n      </div>\n    );\n  }\n}\n\n\nexport default MyTodos;\n","import React, { Component } from 'react'\nimport { Container, Row, Col, Button, Form, FormGroup, Input } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass ErrorPage extends Component {\n\n  render() {\n\n    return (\n      <div className=\"input-fields\">\n        <Container className='text-center'>\n        <h1>I am sorry the Page you looking for does not exist</h1>\n        <h3>Please go back to the <Link to='/'>Landingpage</Link></h3>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ErrorPage;","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport auth from './auth';\n\nclass ProtectedRoute extends React.Component {\n\n    render() {\n        const Component = this.props.component;\n        \n        return auth.isAuthenticated() ? (\n            <Component />\n        ) : (\n            <Redirect to={{ pathname: '/' }} />\n        );\n    }\n}\n\nexport default ProtectedRoute;","import React, { Component } from 'react';\nimport Signup from './components/signup';\nimport Login from './components/login';\nimport LandingPage from './components/landingpage';\nimport MyTodos from './components/mytodos';\nimport ErrorPage from './components/errorpage';\nimport { Route, Switch } from 'react-router-dom';\nimport ProtectedRoute from './components/protectedroute';\nimport Navbar from './components/navbar';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Switch>\n        {/* <ProtectedRoute exact path='/MyTodos' component={Navbar} /> */}\n        <Route exact path='/' component={LandingPage} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/signup' component={Signup} />\n        {/* <Route exact path='/MyTodos' component={MyTodos} /> */}\n        <ProtectedRoute exact path='/MyTodos' component={MyTodos} />\n        <Route path='*' component={ErrorPage}/>\n      </Switch>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React, { Component } from 'react'\nimport { Container, Row, Col, Button, Form, FormGroup, Input } from \"reactstrap\";\nimport auth from './auth';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        task: \"\",\n        date: \"\",\n        time: \"\",\n        // isChecked: false\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      //set id for input field to be same as state properties above\n      // grab the id of the target element and\n      // update the state properties\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    if (this.state.task === \"\" && this.state.time === \"\")\n    {\n      return null;\n    }\n    else\n    {\n\n      this.props.addTodo(this.state);\n      this.setState({\n        task: \"\",\n        date: \"\",\n        time: \"\",\n      });\n    }\n  };\n\n  render() {\n    // const { handleChange, handleSubmit, deleteTask } = this.props;\n    // const deleteTodo = todos.map((todo) => {\n    //   let todoDate = new Date(todo.date);\n    //   todoDate = todoDate.getDate();\n    //   return todoDate === curr_date ? \"Today\" : \"Upcoming\";\n    // });\n\n    return (\n      <div className=\"input-fields\">\n        <Container>\n        <Row>\n          <Col xs='6'>\n            <Link to='/' className='text-white'>Back to Landingpage</Link>\n          </Col>\n          <Col xs='6' className='text-right'>\n\n            <Form onSubmit={() => {\n                    auth.logout(() => {\n                        this.props.history.push('/');\n                    })\n                }}>\n\n                <button className='btn btn-success'>Logout</button>\n\n            </Form>\n          </Col>\n        </Row>        \n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}